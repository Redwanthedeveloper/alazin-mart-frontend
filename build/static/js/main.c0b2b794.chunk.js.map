{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","components/Meta.js","actions/productActions.js","actions/cartActions.js","screens/HomeScreen.js","components/Rating.js","screens/ProductScreen.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","actions/orderActions.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/UserOrderList.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","logout","dispatch","removeItem","document","location","href","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","id","render","Nav","Link","NavDropdown","title","Item","onClick","isAdmin","Footer","Row","Col","Product","buyHandler","Card","_id","Img","src","image","Body","Title","as","Text","price","Message","children","Alert","defaultProps","Loader","Spinner","animation","role","style","width","height","margin","display","Paginate","Pagination","Array","keys","key","active","Meta","description","keywords","Helmet","content","listProducts","pageNumber","a","axios","get","data","response","message","listProductDetails","addToCart","qty","getState","countInStock","setItem","stringify","HomeScreen","match","params","pdId","pdQty","useEffect","sm","md","lg","xl","Rating","text","color","ProductScreen","setQty","rating","setRating","comment","setComment","Image","alt","fluid","ListGroup","numReviews","disabled","length","review","createdAt","substring","Group","controlId","Label","row","CartScreen","productId","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","config","headers","post","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","totalPrice","index","Authorization","token","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","isPaid","window","paypal","user","isDelivered","deliveredAt","paidAt","amount","onSuccess","paymentResult","console","log","put","payOrder","deliverOrder","UserListScreen","userList","users","successDelete","userDelete","deleteHandler","confirm","delete","deleteUser","Table","striped","bordered","hover","responsive","UserEditScreen","userId","setIsAdmin","userDetails","userUpdate","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","ProfileScreen","loadingOrders","errorOrders","App","path","component","UserOrderList","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.c0b2b794.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n} from './reducers/productReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { userLoginReducer, userRegisterReducer } from './reducers/userReducers';\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderDeliverReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n} from './reducers/orderReducers';\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null;\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {};\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_RESET,\r\n} from '../constants/productConstants';\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] };\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.products,\r\n        pages: action.payload.pages,\r\n        page: action.payload.page,\r\n      };\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productDetailsReducer = (\r\n  state = { product: { reviews: [] } },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload };\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n    case PRODUCT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_CREATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_UPDATE_RESET:\r\n      return { product: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_CLEAR_ITEMS,\r\n} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload\r\n\r\n      const existItem = state.cartItems.find((x) => x.product === item.product)\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        }\r\n      }\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      }\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      }\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      }\r\n    case CART_CLEAR_ITEMS:\r\n      return {\r\n        ...state,\r\n        cartItems: [],\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_CLEAR_ITEMS = 'CART_RESET'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n","import {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n} from '../constants/userConstants';\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_RESET,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_RESET,\r\n  ORDER_CREATE_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload,\r\n      }\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_CREATE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      }\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload,\r\n      }\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      }\r\n    case ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_PAY_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      }\r\n    case ORDER_DELIVER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_DELIVER_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      }\r\n    case ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_LIST_MY_RESET:\r\n      return { orders: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      }\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const [keyword, setKeyword] = useState('');\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (keyword.trim()) {\r\n      history.push(`/search/${keyword}`);\r\n    } else {\r\n      history.push('/');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler} inline>\r\n      <Form.Control\r\n        type='text'\r\n        name='q'\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n        placeholder='Search Products...'\r\n        className='mr-sm-2 ml-sm-5'\r\n      ></Form.Control>\r\n      <Button type='submit' variant='warning' className='p-2'>\r\n        Search\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import axios from 'axios'\r\nimport {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n} from '../constants/userConstants'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo')\r\n  localStorage.removeItem('cartItems')\r\n  localStorage.removeItem('shippingAddress')\r\n  localStorage.removeItem('paymentMethod')\r\n  dispatch({ type: USER_LOGOUT })\r\n  dispatch({ type: USER_DETAILS_RESET })\r\n  dispatch({ type: ORDER_LIST_MY_RESET })\r\n  dispatch({ type: USER_LIST_RESET })\r\n  document.location.href = '/login'\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users',\r\n      { name, email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    })\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users`, config)\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/users/${id}`, config)\r\n\r\n    dispatch({ type: USER_DELETE_SUCCESS })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS })\r\n\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\r\nimport SearchBox from './SearchBox';\r\nimport { logout } from '../actions/userActions';\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand>Alazin Mart</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Route render={({ history }) => <SearchBox history={history} />} />\r\n            <Nav className='ml-auto'>\r\n              <LinkContainer to={userInfo ? `/myorders` : `/login`}>\r\n                <Nav.Link>\r\n                  <i className='fas fa-list'></i> Orders\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              <LinkContainer to='/cart'>\r\n                <Nav.Link>\r\n                  <i className='fas fa-shopping-cart'></i> Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id='username'>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to='/login'>\r\n                  <Nav.Link>\r\n                    <i className='fas fa-user'></i> Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title='Admin' id='adminmenu'>\r\n                  <LinkContainer to='/admin/productlist'>\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className='text-center py-3'>Copyright &copy; Alazin Mart</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Card, Col, Row } from 'react-bootstrap';\r\n\r\nconst Product = ({ product, buyHandler }) => {\r\n  return (\r\n    <Card className='my-3 p-3 rounded'>\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={product.image} variant='top' />\r\n      </Link>\r\n\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as='div' className='my-3'>\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n\r\n        {/* <Card.Text as='div'>\r\n          <Rating\r\n            value={product.rating}\r\n            text={`${product.numReviews} reviews`}\r\n          />\r\n        </Card.Text> */}\r\n\r\n        <Row className='d-flex align-items-center'>\r\n          <Col>\r\n            <Card.Text as='h4'>\r\n              <strong>${product.price}</strong>\r\n            </Card.Text>\r\n          </Col>\r\n          <Col>\r\n            <Button\r\n              className='btn btn-primary buy__btn'\r\n              onClick={() => buyHandler(product._id, 1)}\r\n            >\r\n              Buy Now\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n  variant: 'info',\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation='border'\r\n      role='status'\r\n      style={{\r\n        width: '100px',\r\n        height: '100px',\r\n        margin: 'auto',\r\n        display: 'block',\r\n      }}\r\n    >\r\n      <span className='sr-only'>Loading...</span>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? keyword\r\n                  ? `/search/${keyword}/page/${x + 1}`\r\n                  : `/page/${x + 1}`\r\n                : `/admin/productlist/${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Paginate\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name='description' content={description} />\r\n      <meta name='keyword' content={keywords} />\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nMeta.defaultProps = {\r\n  title: 'Welcome To Alazin Mart',\r\n  description: 'A T-shirt Shop with low price',\r\n  keywords: 'Shirt, T-Shirt',\r\n};\r\n\r\nexport default Meta;\r\n","import axios from 'axios';\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n} from '../constants/productConstants';\r\nimport { logout } from './userActions';\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n    const { data } = await axios.get(\r\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n    );\r\n\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/products/${id}`, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/products`, {}, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/${product._id}`,\r\n      product,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","import axios from 'axios'\r\nimport {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  })\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  })\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  })\r\n\r\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  })\r\n\r\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport Paginate from '../components/Paginate';\r\nimport Meta from '../components/Meta';\r\nimport { listProducts } from '../actions/productActions';\r\nimport { addToCart } from '../actions/cartActions';\r\n\r\nconst HomeScreen = ({ match, history }) => {\r\n  const keyword = match.params.keyword;\r\n\r\n  const pageNumber = match.params.pageNumber || 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, page, pages } = productList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const buyHandler = (pdId, pdQty) => {\r\n    dispatch(addToCart(pdId, pdQty));\r\n    if (userInfo) {\r\n      history.push('/shipping');\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword, pageNumber));\r\n  }, [dispatch, keyword, pageNumber]);\r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n      {!keyword ? (\r\n        ''\r\n      ) : (\r\n        <Link to='/' className='btn btn-light'>\r\n          Go Back\r\n        </Link>\r\n      )}\r\n      <h1>Latest Products</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            {products.map((product) => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} buyHandler={buyHandler} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            keyword={keyword ? keyword : ''}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import React from 'react'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className='rating'>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? 'fas fa-star'\r\n              : value >= 1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? 'fas fa-star'\r\n              : value >= 2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? 'fas fa-star'\r\n              : value >= 3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? 'fas fa-star'\r\n              : value >= 4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>{text && text}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nRating.defaultProps = {\r\n  color: '#f8e825',\r\n}\r\n\r\nexport default Rating\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Form,\r\n} from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport Meta from '../components/Meta';\r\nimport { listProductDetails } from '../actions/productActions';\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (!product._id || product._id !== match.params.id) {\r\n      dispatch(listProductDetails(match.params.id));\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [dispatch, match]);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link className='btn btn-light my-3' to='/'>\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Meta title={product.name} />\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price:</Col>\r\n                      <Col>\r\n                        <strong>${product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as='select'\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      onClick={addToCartHandler}\r\n                      className='btn-block'\r\n                      type='button'\r\n                      disabled={product.countInStock === 0}\r\n                    >\r\n                      Add To Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <h2>Reviews</h2>\r\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n              <ListGroup variant='flush'>\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                <ListGroup.Item>\r\n                  <h2>Write a Customer Review</h2>\r\n\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId='rating'>\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as='select'\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option value=''>Select...</option>\r\n                          <option value='1'>1 - Poor</option>\r\n                          <option value='2'>2 - Fair</option>\r\n                          <option value='3'>3 - Good</option>\r\n                          <option value='4'>4 - Very Good</option>\r\n                          <option value='5'>5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId='comment'>\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control\r\n                          as='textarea'\r\n                          row='3'\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button type='submit' variant='primary'>\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please <Link to='/login'>sign in</Link> to write a review{' '}\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n  const { cartItems } = cart\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty))\r\n    }\r\n  }, [dispatch, productId, qty])\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkoutHandler = () => {\r\n    history.push('/login?redirect=shipping')\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty <Link to='/'>Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant='flush'>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as='select'\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type='button'\r\n                      variant='light'\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(login(email, password))\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          New Customer?{' '}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const { loading, error, userInfo } = userRegister\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(register(name, email, password))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          Have an Account?{' '}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to='/login'>\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to='/shipping'>\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to='/payment'>\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to='/placeorder'>\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { saveShippingAddress } from '../actions/cartActions';\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\r\n    history.push('/placeorder');\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='address'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter address'\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='city'>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter city'\r\n            value={city}\r\n            required\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='postalCode'>\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter postal code'\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='country'>\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter country'\r\n            value={country}\r\n            required\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  if (!shippingAddress.address) {\r\n    history.push('/shipping')\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(savePaymentMethod(paymentMethod))\r\n    history.push('/placeorder')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as='legend'>Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type='radio'\r\n              label='PayPal or Credit Card'\r\n              id='PayPal'\r\n              name='paymentMethod'\r\n              value='PayPal'\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check>\r\n            {/* <Form.Check\r\n              type='radio'\r\n              label='Stripe'\r\n              id='Stripe'\r\n              name='paymentMethod'\r\n              value='Stripe'\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></Form.Check> */}\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { createOrder } from '../actions/orderActions';\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants';\r\nimport { USER_DETAILS_RESET } from '../constants/userConstants';\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  if (!cart.shippingAddress.address) {\r\n    history.push('/shipping');\r\n  } else if (!cart.paymentMethod) {\r\n    history.push('/payment');\r\n  }\r\n  //   Calculate prices\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  );\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, success, error } = orderCreate;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n      dispatch({ type: USER_DETAILS_RESET });\r\n      dispatch({ type: ORDER_CREATE_RESET });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success]);\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\r\n                {cart.shippingAddress.postalCode},{' '}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","import axios from 'axios';\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants';\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_REQUEST,\r\n} from '../constants/orderConstants';\r\nimport { logout } from './userActions';\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/orders`, order, config);\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({\r\n      type: CART_CLEAR_ITEMS,\r\n      payload: data,\r\n    });\r\n    localStorage.removeItem('cartItems');\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${orderId}/pay`,\r\n      paymentResult,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVER_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/deliver`,\r\n      {},\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from '../actions/orderActions';\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants';\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id;\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2);\r\n    };\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    }\r\n\r\n    if (!order || successPay || successDeliver || order._id !== orderId) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, orderId, successPay, successDeliver, order, history, userInfo]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order));\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{' '}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                {order.shippingAddress.postalCode},{' '}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    ''\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn btn-block'\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userList = useSelector((state) => state.userList)\r\n  const { loading, error, users } = userList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userDelete = useSelector((state) => state.userDelete)\r\n  const { success: successDelete } = userDelete\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, history, successDelete, userInfo])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteUser(id))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant='danger'\r\n                    className='btn-sm'\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className='fas fa-trash'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET })\r\n      history.push('/admin/userlist')\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId))\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n        setIsAdmin(user.isAdmin)\r\n      }\r\n    }\r\n  }, [dispatch, history, userId, user, successUpdate])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='isadmin'>\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='Is Admin'\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products, page, pages } = productList\r\n\r\n  const productDelete = useSelector((state) => state.productDelete)\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete\r\n\r\n  const productCreate = useSelector((state) => state.productCreate)\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n    if (!userInfo || !userInfo.isAdmin) {\r\n      history.push('/login')\r\n    }\r\n\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`)\r\n    } else {\r\n      dispatch(listProducts('', pageNumber))\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    pageNumber,\r\n  ])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteProduct(id))\r\n    }\r\n  }\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct())\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          <Button className='my-3' onClick={createProductHandler}>\r\n            <i className='fas fa-plus'></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm'\r\n                      onClick={() => deleteHandler(product._id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [price, setPrice] = useState(0)\r\n  const [image, setImage] = useState('')\r\n  const [brand, setBrand] = useState('')\r\n  const [category, setCategory] = useState('')\r\n  const [countInStock, setCountInStock] = useState(0)\r\n  const [description, setDescription] = useState('')\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET })\r\n      history.push('/admin/productlist')\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        dispatch(listProductDetails(productId))\r\n      } else {\r\n        setName(product.name)\r\n        setPrice(product.price)\r\n        setImage(product.image)\r\n        setBrand(product.brand)\r\n        setCategory(product.category)\r\n        setCountInStock(product.countInStock)\r\n        setDescription(product.description)\r\n      }\r\n    }\r\n  }, [dispatch, history, productId, product, successUpdate])\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n      setImage(data)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        description,\r\n        countInStock,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='price'>\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter price'\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='brand'>\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter brand'\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='countInStock'>\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter countInStock'\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='category'>\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter category'\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter description'\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, { useEffect } from 'react';\r\nimport { Table, Button, Row, Col } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listMyOrders } from '../actions/orderActions';\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    } else {\r\n      dispatch(listMyOrders());\r\n    }\r\n  }, [dispatch, userInfo, history]);\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={12}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant='danger'>{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className='btn-sm' variant='light'>\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { Container } from 'react-bootstrap';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport ProductScreen from './screens/ProductScreen';\r\nimport CartScreen from './screens/CartScreen';\r\nimport LoginScreen from './screens/LoginScreen';\r\nimport RegisterScreen from './screens/RegisterScreen';\r\nimport ShippingScreen from './screens/ShippingScreen';\r\nimport PaymentScreen from './screens/PaymentScreen';\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\r\nimport OrderScreen from './screens/OrderScreen';\r\nimport UserListScreen from './screens/UserListScreen';\r\nimport UserEditScreen from './screens/UserEditScreen';\r\nimport ProductListScreen from './screens/ProductListScreen';\r\nimport ProductEditScreen from './screens/ProductEditScreen';\r\nimport UserOrderList from './screens/UserOrderList';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <main className='py-3'>\r\n        <Container>\r\n          <Route path='/myorders' component={UserOrderList} />\r\n          <Route path='/order/:id' component={OrderScreen} />\r\n          <Route path='/shipping' component={ShippingScreen} />\r\n          <Route path='/payment' component={PaymentScreen} />\r\n          <Route path='/placeorder' component={PlaceOrderScreen} />\r\n          <Route path='/login' component={LoginScreen} />\r\n          <Route path='/register' component={RegisterScreen} />\r\n          <Route path='/product/:id' component={ProductScreen} />\r\n          <Route path='/cart/:id?' component={CartScreen} />\r\n          <Route path='/admin/userlist' component={UserListScreen} />\r\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\r\n          <Route\r\n            path='/admin/productlist'\r\n            component={ProductListScreen}\r\n            exact\r\n          />\r\n          <Route\r\n            path='/admin/productlist/:pageNumber'\r\n            component={ProductListScreen}\r\n            exact\r\n          />\r\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\r\n          <Route path='/search/:keyword' component={HomeScreen} exact />\r\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\r\n          <Route\r\n            path='/search/:keyword/page/:pageNumber'\r\n            component={HomeScreen}\r\n            exact\r\n          />\r\n          <Route path='/' component={HomeScreen} exact />\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport './bootstrap.min.css'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}